// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RaceSpotLiveryAPI.Contexts;

namespace RaceSpotLiveryAPI.Migrations
{
    [DbContext(typeof(RaceSpotDBContext))]
    [Migration("20200623215542_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("RaceSpotLiveryAPI.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("BroadcastLink")
                        .HasColumnType("text");

                    b.Property<int>("EventState")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RaceTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("SeriesId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("RaceSpotLiveryAPI.Models.Livery", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ITeamId")
                        .HasColumnType("text");

                    b.Property<int>("LiveryType")
                        .HasColumnType("integer");

                    b.Property<Guid>("SeriesId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("Liveries");
                });

            modelBuilder.Entity("RaceSpotLiveryAPI.Models.Series", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTeam")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("RaceSpotLiveryAPI.Models.Event", b =>
                {
                    b.HasOne("RaceSpotLiveryAPI.Models.Series", "Series")
                        .WithMany("Events")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RaceSpotLiveryAPI.Models.Livery", b =>
                {
                    b.HasOne("RaceSpotLiveryAPI.Models.Series", "Series")
                        .WithMany("Liveries")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
